{
  "contractName": "ERC165",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "_registerInterface",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"_registerInterface\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"_registerInterface(bytes4)\":{\"details\":\"Registers an interface to be supported by the contract.\",\"params\":{\"interfaceID\":\"The interface ID to register.\"}},\"constructor\":{\"details\":\"Constructor registers the ERC165 interface itself.\"},\"supportsInterface(bytes4)\":{\"details\":\"Checks if a given interface is supported.\",\"params\":{\"interfaceID\":\"The interface ID to check for support.\"},\"returns\":{\"_0\":\"bool Whether the interface is supported.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/src/contracts/ERC165.sol\":{\"keccak256\":\"0x945651b678222958f2f338f34fcef768f9d613560681e95cd2b89b9ca534d2b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5c47fb961519b1c3cb7928e5d6eb936f3c202fdce4bb8313e3962f7d6e0d7cb\",\"dweb:/ipfs/QmQUgsqPbh4xWszgbLRD36NfL4dUNu1m1B9p461u4JVa9Q\"]},\"project:/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x283b825b7892c2f2bfb34c2facdd3d0728c20ca37fc12f275d3c3023f157e355\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5aea70fefc3a8311d60fbc2f24932890314c1fcae52d76e2d6395eb6fa78932\",\"dweb:/ipfs/QmT6FJdiaQaU6HZoZXcDgizCx44Kdu6KhxtHkQqsZrMPKj\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b5060377f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2603b565b60d5565b6001600160e01b0319808216900360b05760405162461bcd60e51b815260206004820152602f60248201527f4552433136353a20616464496e746572666163653a207468697320696e74657260448201526e199858d9481a5cc81a5b9d985b1a59608a1b606482015260840160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b610193806100e46000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063068417d91461007c575b600080fd5b61006861004936600461012c565b6001600160e01b03191660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b61008f61008a36600461012c565b610091565b005b6001600160e01b031980821690036101075760405162461bcd60e51b815260206004820152602f60248201527f4552433136353a20616464496e746572666163653a207468697320696e74657260448201526e199858d9481a5cc81a5b9d985b1a59608a1b606482015260840160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b60006020828403121561013e57600080fd5b81356001600160e01b03198116811461015657600080fd5b939250505056fea2646970667358221220f84ddc308c5c1eb7ed6aa01ffe272c68bcc7a2a8b11b8a857f0781dc518421c564736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063068417d91461007c575b600080fd5b61006861004936600461012c565b6001600160e01b03191660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b61008f61008a36600461012c565b610091565b005b6001600160e01b031980821690036101075760405162461bcd60e51b815260206004820152602f60248201527f4552433136353a20616464496e746572666163653a207468697320696e74657260448201526e199858d9481a5cc81a5b9d985b1a59608a1b606482015260840160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b60006020828403121561013e57600080fd5b81356001600160e01b03198116811461015657600080fd5b939250505056fea2646970667358221220f84ddc308c5c1eb7ed6aa01ffe272c68bcc7a2a8b11b8a857f0781dc518421c564736f6c634300081c0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nativeSrc": "0:427:11",
        "nodeType": "YulBlock",
        "src": "0:427:11",
        "statements": [
          {
            "nativeSrc": "6:3:11",
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nativeSrc": "188:237:11",
              "nodeType": "YulBlock",
              "src": "188:237:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "205:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "216:2:11",
                        "nodeType": "YulLiteral",
                        "src": "216:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "198:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "198:6:11"
                    },
                    "nativeSrc": "198:21:11",
                    "nodeType": "YulFunctionCall",
                    "src": "198:21:11"
                  },
                  "nativeSrc": "198:21:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "198:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "239:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "250:2:11",
                            "nodeType": "YulLiteral",
                            "src": "250:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "235:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:11"
                        },
                        "nativeSrc": "235:18:11",
                        "nodeType": "YulFunctionCall",
                        "src": "235:18:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "255:2:11",
                        "nodeType": "YulLiteral",
                        "src": "255:2:11",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "228:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:11"
                    },
                    "nativeSrc": "228:30:11",
                    "nodeType": "YulFunctionCall",
                    "src": "228:30:11"
                  },
                  "nativeSrc": "228:30:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "228:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "278:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "289:2:11",
                            "nodeType": "YulLiteral",
                            "src": "289:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "274:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:11"
                        },
                        "nativeSrc": "274:18:11",
                        "nodeType": "YulFunctionCall",
                        "src": "274:18:11"
                      },
                      {
                        "hexValue": "4552433136353a20616464496e746572666163653a207468697320696e746572",
                        "kind": "string",
                        "nativeSrc": "294:34:11",
                        "nodeType": "YulLiteral",
                        "src": "294:34:11",
                        "type": "",
                        "value": "ERC165: addInterface: this inter"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "267:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "267:6:11"
                    },
                    "nativeSrc": "267:62:11",
                    "nodeType": "YulFunctionCall",
                    "src": "267:62:11"
                  },
                  "nativeSrc": "267:62:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "267:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "349:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "349:9:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "360:2:11",
                            "nodeType": "YulLiteral",
                            "src": "360:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "345:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "345:3:11"
                        },
                        "nativeSrc": "345:18:11",
                        "nodeType": "YulFunctionCall",
                        "src": "345:18:11"
                      },
                      {
                        "hexValue": "6661636520697320696e76616c6964",
                        "kind": "string",
                        "nativeSrc": "365:17:11",
                        "nodeType": "YulLiteral",
                        "src": "365:17:11",
                        "type": "",
                        "value": "face is invalid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "338:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "338:6:11"
                    },
                    "nativeSrc": "338:45:11",
                    "nodeType": "YulFunctionCall",
                    "src": "338:45:11"
                  },
                  "nativeSrc": "338:45:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "338:45:11"
                },
                {
                  "nativeSrc": "392:27:11",
                  "nodeType": "YulAssignment",
                  "src": "392:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "404:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "404:9:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "415:3:11",
                        "nodeType": "YulLiteral",
                        "src": "415:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "400:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:11"
                    },
                    "nativeSrc": "400:19:11",
                    "nodeType": "YulFunctionCall",
                    "src": "400:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "392:4:11",
                      "nodeType": "YulIdentifier",
                      "src": "392:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b8fd930101264ea2052011fd4d3744f593bee796cdcc20b649bc19d6339cfcb0__to_t_string_memory_ptr__fromStack_reversed",
            "nativeSrc": "14:411:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "165:9:11",
                "nodeType": "YulTypedName",
                "src": "165:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "179:4:11",
                "nodeType": "YulTypedName",
                "src": "179:4:11",
                "type": ""
              }
            ],
            "src": "14:411:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_b8fd930101264ea2052011fd4d3744f593bee796cdcc20b649bc19d6339cfcb0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC165: addInterface: this inter\")\n        mstore(add(headStart, 96), \"face is invalid\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nativeSrc": "0:910:11",
        "nodeType": "YulBlock",
        "src": "0:910:11",
        "statements": [
          {
            "nativeSrc": "6:3:11",
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nativeSrc": "83:217:11",
              "nodeType": "YulBlock",
              "src": "83:217:11",
              "statements": [
                {
                  "body": {
                    "nativeSrc": "129:16:11",
                    "nodeType": "YulBlock",
                    "src": "129:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "138:1:11",
                              "nodeType": "YulLiteral",
                              "src": "138:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "141:1:11",
                              "nodeType": "YulLiteral",
                              "src": "141:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "131:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "131:6:11"
                          },
                          "nativeSrc": "131:12:11",
                          "nodeType": "YulFunctionCall",
                          "src": "131:12:11"
                        },
                        "nativeSrc": "131:12:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "131:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nativeSrc": "104:7:11",
                            "nodeType": "YulIdentifier",
                            "src": "104:7:11"
                          },
                          {
                            "name": "headStart",
                            "nativeSrc": "113:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "113:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nativeSrc": "100:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "100:3:11"
                        },
                        "nativeSrc": "100:23:11",
                        "nodeType": "YulFunctionCall",
                        "src": "100:23:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "125:2:11",
                        "nodeType": "YulLiteral",
                        "src": "125:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nativeSrc": "96:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "96:3:11"
                    },
                    "nativeSrc": "96:32:11",
                    "nodeType": "YulFunctionCall",
                    "src": "96:32:11"
                  },
                  "nativeSrc": "93:52:11",
                  "nodeType": "YulIf",
                  "src": "93:52:11"
                },
                {
                  "nativeSrc": "154:36:11",
                  "nodeType": "YulVariableDeclaration",
                  "src": "154:36:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "180:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "180:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nativeSrc": "167:12:11",
                      "nodeType": "YulIdentifier",
                      "src": "167:12:11"
                    },
                    "nativeSrc": "167:23:11",
                    "nodeType": "YulFunctionCall",
                    "src": "167:23:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nativeSrc": "158:5:11",
                      "nodeType": "YulTypedName",
                      "src": "158:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nativeSrc": "254:16:11",
                    "nodeType": "YulBlock",
                    "src": "254:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "263:1:11",
                              "nodeType": "YulLiteral",
                              "src": "263:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "266:1:11",
                              "nodeType": "YulLiteral",
                              "src": "266:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "256:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:11"
                          },
                          "nativeSrc": "256:12:11",
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:11"
                        },
                        "nativeSrc": "256:12:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nativeSrc": "212:5:11",
                            "nodeType": "YulIdentifier",
                            "src": "212:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "223:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "223:5:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "234:3:11",
                                    "nodeType": "YulLiteral",
                                    "src": "234:3:11",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "239:10:11",
                                    "nodeType": "YulLiteral",
                                    "src": "239:10:11",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nativeSrc": "230:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:3:11"
                                },
                                "nativeSrc": "230:20:11",
                                "nodeType": "YulFunctionCall",
                                "src": "230:20:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "219:3:11",
                              "nodeType": "YulIdentifier",
                              "src": "219:3:11"
                            },
                            "nativeSrc": "219:32:11",
                            "nodeType": "YulFunctionCall",
                            "src": "219:32:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nativeSrc": "209:2:11",
                          "nodeType": "YulIdentifier",
                          "src": "209:2:11"
                        },
                        "nativeSrc": "209:43:11",
                        "nodeType": "YulFunctionCall",
                        "src": "209:43:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nativeSrc": "202:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:11"
                    },
                    "nativeSrc": "202:51:11",
                    "nodeType": "YulFunctionCall",
                    "src": "202:51:11"
                  },
                  "nativeSrc": "199:71:11",
                  "nodeType": "YulIf",
                  "src": "199:71:11"
                },
                {
                  "nativeSrc": "279:15:11",
                  "nodeType": "YulAssignment",
                  "src": "279:15:11",
                  "value": {
                    "name": "value",
                    "nativeSrc": "289:5:11",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nativeSrc": "279:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nativeSrc": "14:286:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "49:9:11",
                "nodeType": "YulTypedName",
                "src": "49:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nativeSrc": "60:7:11",
                "nodeType": "YulTypedName",
                "src": "60:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nativeSrc": "72:6:11",
                "nodeType": "YulTypedName",
                "src": "72:6:11",
                "type": ""
              }
            ],
            "src": "14:286:11"
          },
          {
            "body": {
              "nativeSrc": "400:92:11",
              "nodeType": "YulBlock",
              "src": "400:92:11",
              "statements": [
                {
                  "nativeSrc": "410:26:11",
                  "nodeType": "YulAssignment",
                  "src": "410:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "422:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "433:2:11",
                        "nodeType": "YulLiteral",
                        "src": "433:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "418:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:11"
                    },
                    "nativeSrc": "418:18:11",
                    "nodeType": "YulFunctionCall",
                    "src": "418:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "410:4:11",
                      "nodeType": "YulIdentifier",
                      "src": "410:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "452:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "452:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nativeSrc": "477:6:11",
                                "nodeType": "YulIdentifier",
                                "src": "477:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "470:6:11",
                              "nodeType": "YulIdentifier",
                              "src": "470:6:11"
                            },
                            "nativeSrc": "470:14:11",
                            "nodeType": "YulFunctionCall",
                            "src": "470:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nativeSrc": "463:6:11",
                          "nodeType": "YulIdentifier",
                          "src": "463:6:11"
                        },
                        "nativeSrc": "463:22:11",
                        "nodeType": "YulFunctionCall",
                        "src": "463:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "445:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "445:6:11"
                    },
                    "nativeSrc": "445:41:11",
                    "nodeType": "YulFunctionCall",
                    "src": "445:41:11"
                  },
                  "nativeSrc": "445:41:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "445:41:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nativeSrc": "305:187:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "369:9:11",
                "nodeType": "YulTypedName",
                "src": "369:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nativeSrc": "380:6:11",
                "nodeType": "YulTypedName",
                "src": "380:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "391:4:11",
                "nodeType": "YulTypedName",
                "src": "391:4:11",
                "type": ""
              }
            ],
            "src": "305:187:11"
          },
          {
            "body": {
              "nativeSrc": "671:237:11",
              "nodeType": "YulBlock",
              "src": "671:237:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "688:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "688:9:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "699:2:11",
                        "nodeType": "YulLiteral",
                        "src": "699:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "681:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "681:6:11"
                    },
                    "nativeSrc": "681:21:11",
                    "nodeType": "YulFunctionCall",
                    "src": "681:21:11"
                  },
                  "nativeSrc": "681:21:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "681:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "722:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "722:9:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "733:2:11",
                            "nodeType": "YulLiteral",
                            "src": "733:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "718:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "718:3:11"
                        },
                        "nativeSrc": "718:18:11",
                        "nodeType": "YulFunctionCall",
                        "src": "718:18:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "738:2:11",
                        "nodeType": "YulLiteral",
                        "src": "738:2:11",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "711:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "711:6:11"
                    },
                    "nativeSrc": "711:30:11",
                    "nodeType": "YulFunctionCall",
                    "src": "711:30:11"
                  },
                  "nativeSrc": "711:30:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "711:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "761:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "761:9:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "772:2:11",
                            "nodeType": "YulLiteral",
                            "src": "772:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "757:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "757:3:11"
                        },
                        "nativeSrc": "757:18:11",
                        "nodeType": "YulFunctionCall",
                        "src": "757:18:11"
                      },
                      {
                        "hexValue": "4552433136353a20616464496e746572666163653a207468697320696e746572",
                        "kind": "string",
                        "nativeSrc": "777:34:11",
                        "nodeType": "YulLiteral",
                        "src": "777:34:11",
                        "type": "",
                        "value": "ERC165: addInterface: this inter"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "750:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "750:6:11"
                    },
                    "nativeSrc": "750:62:11",
                    "nodeType": "YulFunctionCall",
                    "src": "750:62:11"
                  },
                  "nativeSrc": "750:62:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "750:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "832:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "832:9:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "843:2:11",
                            "nodeType": "YulLiteral",
                            "src": "843:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "828:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "828:3:11"
                        },
                        "nativeSrc": "828:18:11",
                        "nodeType": "YulFunctionCall",
                        "src": "828:18:11"
                      },
                      {
                        "hexValue": "6661636520697320696e76616c6964",
                        "kind": "string",
                        "nativeSrc": "848:17:11",
                        "nodeType": "YulLiteral",
                        "src": "848:17:11",
                        "type": "",
                        "value": "face is invalid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "821:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "821:6:11"
                    },
                    "nativeSrc": "821:45:11",
                    "nodeType": "YulFunctionCall",
                    "src": "821:45:11"
                  },
                  "nativeSrc": "821:45:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "821:45:11"
                },
                {
                  "nativeSrc": "875:27:11",
                  "nodeType": "YulAssignment",
                  "src": "875:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "887:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "887:9:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "898:3:11",
                        "nodeType": "YulLiteral",
                        "src": "898:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "883:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "883:3:11"
                    },
                    "nativeSrc": "883:19:11",
                    "nodeType": "YulFunctionCall",
                    "src": "883:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "875:4:11",
                      "nodeType": "YulIdentifier",
                      "src": "875:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b8fd930101264ea2052011fd4d3744f593bee796cdcc20b649bc19d6339cfcb0__to_t_string_memory_ptr__fromStack_reversed",
            "nativeSrc": "497:411:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "648:9:11",
                "nodeType": "YulTypedName",
                "src": "648:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "662:4:11",
                "nodeType": "YulTypedName",
                "src": "662:4:11",
                "type": ""
              }
            ],
            "src": "497:411:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_b8fd930101264ea2052011fd4d3744f593bee796cdcc20b649bc19d6339cfcb0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC165: addInterface: this inter\")\n        mstore(add(headStart, 96), \"face is invalid\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "98:1038:0:-:0;;;324:99;;;;;;;;;-1:-1:-1;349:66:0;375:38;349:18;:66::i;:::-;98:1038;;923:210;-1:-1:-1;;;;;;997:25:0;;;;;989:85;;;;-1:-1:-1;;;989:85:0;;216:2:11;989:85:0;;;198:21:11;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:11;;;338:45;400:19;;989:85:0;;;;;;;;-1:-1:-1;;;;;;1085:33:0;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1085:40:0;1121:4;1085:40;;;923:210::o;14:411:11:-;98:1038:0;;;;;;",
  "deployedSourceMap": "98:1038:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;627:144;;;;;;:::i;:::-;-1:-1:-1;;;;;;730:33:0;706:4;730:33;;;;;;;;;;;;;;627:144;;;;470:14:11;;463:22;445:41;;433:2;418:18;627:144:0;;;;;;;923:210;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;997:25:0;;;;;989:85;;;;-1:-1:-1;;;989:85:0;;699:2:11;989:85:0;;;681:21:11;738:2;718:18;;;711:30;777:34;757:18;;;750:62;-1:-1:-1;;;828:18:11;;;821:45;883:19;;989:85:0;;;;;;;;-1:-1:-1;;;;;;1085:33:0;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1085:40:0;1121:4;1085:40;;;923:210::o;14:286:11:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:11;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:11:o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./interfaces/IERC165.sol\";\r\n\r\ncontract ERC165 is IERC165 {\r\n    // Mapping to store supported interface IDs\r\n    mapping(bytes4 => bool) private _supportedInterfaces;\r\n\r\n    /**\r\n     * @dev Constructor registers the ERC165 interface itself.\r\n     */\r\n    constructor() {\r\n        _registerInterface(bytes4(keccak256('supportsInterface(bytes4)')));\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if a given interface is supported.\r\n     * @param interfaceID The interface ID to check for support.\r\n     * @return bool Whether the interface is supported.\r\n     */\r\n    function supportsInterface(bytes4 interfaceID) external view override returns (bool) {\r\n        return _supportedInterfaces[interfaceID];\r\n    }\r\n\r\n    /**\r\n     * @dev Registers an interface to be supported by the contract.\r\n     * @param interfaceID The interface ID to register.\r\n     */\r\n    function _registerInterface(bytes4 interfaceID) public {\r\n        require(interfaceID != 0xffffffff, \"ERC165: addInterface: this interface is invalid\");\r\n        _supportedInterfaces[interfaceID] = true;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\pavan\\OneDrive\\Desktop\\codes\\Projects\\BrainStorm_NITSilchar_FlipkartGrid4.0\\NFT\\src\\contracts\\ERC165.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/ERC165.sol",
    "exportedSymbols": {
      "ERC165": [
        57
      ],
      "IERC165": [
        1100
      ]
    },
    "id": 58,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "project:/src/contracts/interfaces/IERC165.sol",
        "file": "./interfaces/IERC165.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 1101,
        "src": "60:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "IERC165",
              "nameLocations": [
                "117:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1100,
              "src": "117:7:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "117:7:0"
          }
        ],
        "canonicalName": "ERC165",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 57,
        "linearizedBaseContracts": [
          57,
          1100
        ],
        "name": "ERC165",
        "nameLocation": "107:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "mutability": "mutable",
            "name": "_supportedInterfaces",
            "nameLocation": "213:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 57,
            "src": "181:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
              "typeString": "mapping(bytes4 => bool)"
            },
            "typeName": {
              "id": 7,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 5,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "189:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "Mapping",
              "src": "181:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                "typeString": "mapping(bytes4 => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 6,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "199:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "338:85:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "737570706f727473496e746572666163652862797465733429",
                                "id": 16,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "385:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2",
                                  "typeString": "literal_string \"supportsInterface(bytes4)\""
                                },
                                "value": "supportsInterface(bytes4)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2",
                                  "typeString": "literal_string \"supportsInterface(bytes4)\""
                                }
                              ],
                              "id": 15,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967288,
                              "src": "375:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 17,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "375:38:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 14,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "368:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes4_$",
                            "typeString": "type(bytes4)"
                          },
                          "typeName": {
                            "id": 13,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "368:6:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "368:46:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 12,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "349:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "349:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "349:66:0"
                }
              ]
            },
            "documentation": {
              "id": 9,
              "nodeType": "StructuredDocumentation",
              "src": "242:76:0",
              "text": " @dev Constructor registers the ERC165 interface itself."
            },
            "id": 22,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:2:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "338:0:0"
            },
            "scope": 57,
            "src": "324:99:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1099
            ],
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "712:59:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 31,
                      "name": "_supportedInterfaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "730:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                        "typeString": "mapping(bytes4 => bool)"
                      }
                    },
                    "id": 33,
                    "indexExpression": {
                      "id": 32,
                      "name": "interfaceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "751:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "730:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 30,
                  "id": 34,
                  "nodeType": "Return",
                  "src": "723:40:0"
                }
              ]
            },
            "documentation": {
              "id": 23,
              "nodeType": "StructuredDocumentation",
              "src": "431:190:0",
              "text": " @dev Checks if a given interface is supported.\n @param interfaceID The interface ID to check for support.\n @return bool Whether the interface is supported."
            },
            "functionSelector": "01ffc9a7",
            "id": 36,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "636:17:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 27,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "688:8:0"
            },
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "interfaceID",
                  "nameLocation": "661:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "654:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "653:20:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "706:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "705:6:0"
            },
            "scope": 57,
            "src": "627:144:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "978:155:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 43,
                          "name": "interfaceID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "997:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30786666666666666666",
                          "id": 44,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1012:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967295_by_1",
                            "typeString": "int_const 4294967295"
                          },
                          "value": "0xffffffff"
                        },
                        "src": "997:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433136353a20616464496e746572666163653a207468697320696e7465726661636520697320696e76616c6964",
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1024:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8fd930101264ea2052011fd4d3744f593bee796cdcc20b649bc19d6339cfcb0",
                          "typeString": "literal_string \"ERC165: addInterface: this interface is invalid\""
                        },
                        "value": "ERC165: addInterface: this interface is invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8fd930101264ea2052011fd4d3744f593bee796cdcc20b649bc19d6339cfcb0",
                          "typeString": "literal_string \"ERC165: addInterface: this interface is invalid\""
                        }
                      ],
                      "id": 42,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "989:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "989:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "989:85:0"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49,
                        "name": "_supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1085:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 51,
                      "indexExpression": {
                        "id": 50,
                        "name": "interfaceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39,
                        "src": "1106:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1085:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1121:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1085:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:40:0"
                }
              ]
            },
            "documentation": {
              "id": 37,
              "nodeType": "StructuredDocumentation",
              "src": "779:138:0",
              "text": " @dev Registers an interface to be supported by the contract.\n @param interfaceID The interface ID to register."
            },
            "functionSelector": "068417d9",
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterface",
            "nameLocation": "932:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "interfaceID",
                  "nameLocation": "958:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "951:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "950:20:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:0:0"
            },
            "scope": 57,
            "src": "923:210:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 58,
        "src": "98:1038:0",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "33:1105:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.28+commit.7893614a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-12-15T07:25:47.400Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "_registerInterface(bytes4)": {
        "details": "Registers an interface to be supported by the contract.",
        "params": {
          "interfaceID": "The interface ID to register."
        }
      },
      "constructor": {
        "details": "Constructor registers the ERC165 interface itself."
      },
      "supportsInterface(bytes4)": {
        "details": "Checks if a given interface is supported.",
        "params": {
          "interfaceID": "The interface ID to check for support."
        },
        "returns": {
          "_0": "bool Whether the interface is supported."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}